#!/bin/sh


help()
{
cat <<EOF
USAGE:

numcxx-build  [flags] file_1 ... file_n 

Build and link files together and with the numcxx library.

The  script creates  a CMakeListst.txt  file in  a build  subdirectory
where it performs an out of source build as it is common with cmake.

FLAGS:

    -d, -g, --debug: generate code with debug information
    -h, --help: this help
    -o, --output  <name>: specifiy output file name
    -p, --project <name>: specify project name 
    -r, --reset: reset build directory
    -v, --verbose: verbose output
    -x, --execute: run program after build
    --cxx <name>: Set c++ compiler. Same as CXX=<name> numcxx-build ... 

(c) 2017 J. Fuhrmann
EOF
}


output=main

project=numcxxproject

WD=$PWD

until test $# = 0 ; do
    case $1 in
	-d | -g| --debug) debug=1 ; shift
 	    ;;
	-h | --help)  help; exit
	    ;;
	-o | --output) output=$2 ; shift ; shift
 	    ;;
	-p | --project) project=$2 ; shift ; shift
 	    ;;
	-r | --reset) doreset=1 ; shift 
 	    ;;
	-v | --verbose) verbose=1 ; shift
            ;;
	-x | --execute) execute=1 ; shift
            ;;
	--cxx)  CXX=$2; shift; shift;
 	    ;;
 	*) if test -f $1; then 
            files="$files ../../../$1" 
            else 
            echo "Missing input file $1 or command line syntax error"; 
            exit 1; 
            fi; shift
    esac
done


export CXX

mkdir -p .build/numcxx/$output

if test  -z "$files"  ; then
    echo Missing list of input files
    help
    exit
fi

if test x$debug = !x; then
    CMAKE_BUILD_TYPE=DEBUG
    build=.build/numcxx/$output/debug
else
    CMAKE_BUILD_TYPE=RELEASE
    build=.build/numcxx/$output/release
fi



cat> .build/numcxx/$output/CMakeLists.txt <<EOF

cmake_minimum_required(VERSION 2.8.12)

PROJECT($project C CXX)

find_package(NUMCXX REQUIRED PATHS @PATH_HINT_DIR@)

include_directories("\${NUMCXX_INCLUDE_DIRS}")

link_libraries("\${NUMCXX_LIBRARIES}")

if (CMAKE_BUILD_TYPE STREQUAL "DEBUG")

  add_definitions("-DNUMCXX_CHECK_BOUNDS")

endif()

add_executable($output $files)

EOF

if test x$verbose != x ; then
    echo \---- CMakeLists.txt ----
    cat .build/numcxx/$output/CMakeLists.txt
    echo \------------------------
fi

if test  x$doreset != x ; then
    if  test -d $build; then
        rm -r $build
        if test x$verbose !=x ; then
            echo numcxx-build: Removed build directory $build
        fi
    fi
fi

if ! test -d $build; then
    mkdir -p $build
    cd $build
    CXXFLAGS="-std=c++11 $CXXFLAGS" cmake -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE ..
    cd $WD
    if test x$verbose !=x ; then
        echo numcxx-build: Created build directory $build
    fi
fi

if test x$verbose != x ; then
    VERBOSE=1
    export VERBOSE
fi

if ! cmake --build $build ; then
    echo
    echo numcxx-build: compilation error
    exit 1
fi
    

if test x$verbose != x ; then
    echo numcxx-build: Built $output 
fi

cp -p $build/$output $output
if test x$verbose != x ; then
    echo numcxx-build: Copied $output from build directory  $build to $PWD
fi
ls -l $output
echo  

if test x$execute != x ; then
    ./$output
    exit $1
fi



